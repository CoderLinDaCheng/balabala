/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'lindacheng' at '16-12-6 下午4:14' with Gradle 3.2
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven'
    id 'signing'

}

group = 'com.github.coderlindacheng'
version = '0.0.1'
sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile group: 'com.ning', name: 'async-http-client', version: '1.7.24'
    compile group: 'org.apache.commons', name: 'commons-email', version: '1.4'
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    compile group: 'com.google.guava', name: 'guava', version: '20.0'
    compile group: 'org.asynchttpclient', name: 'async-http-client', version: '2.0.24'
    compile group: 'joda-time', name: 'joda-time', version: '2.9.6'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.7'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

//-----------intelliJ IDEA 插件相关----------------------
idea {
    project {
        jdkName = project.sourceCompatibility
        languageLevel = project.sourceCompatibility
        vcs = 'Git'
    }

    module {
        downloadJavadoc = false
        downloadSources = false
    }
}
//-----------------------------------------------------

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

//为所有的jar包做数字签名
signing {
    sign configurations.archives
}

def repositoryUsername = 'CoderLinDaCheng'
def repositoryPassword = 'lindacheng0811'
def scmUrl = 'https://github.com/coderlindacheng/balabala.git'
def githubUrl = 'https://github.com/coderlindacheng/balabala'

def date = new Date()

jar {
    manifest {
        attributes 'Gradle-Version': gradle.gradleVersion
        attributes 'Created-By': "L.D.C ($date)"
    }
}

uploadArchives {
    repositories {
        mavenDeployer {

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots") {
                authentication(userName: repositoryUsername, password: repositoryPassword)
            }
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                authentication(userName: repositoryUsername, password: repositoryPassword)
            }
            pom.project {

                groupId project.group
                artifactId project.name
                version project.version
                name project.name
                packaging 'jar'
                description 'daily code accumulation.'
                url githubUrl

                scm {
                    url githubUrl
                    connection scmUrl
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'CoderLinDaCheng'
                        name 'leo'
                        email 'leolindacheng@gmail.com'
                    }
                }
            }
        }
    }
}